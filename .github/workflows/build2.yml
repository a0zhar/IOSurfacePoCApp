name: Compile PoC Application

on:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: macos-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Detect .xcodeproj file and format version
      - name: Detect Xcode project and format version
        id: detect_xcode
        run: |
          # Locate the .xcodeproj file
          PROJECT_FILE=$(find . -name "*.xcodeproj" | head -n 1)
          if [ -z "$PROJECT_FILE" ]; then
            echo "Error: No .xcodeproj file found in the repository."
            exit 1
          fi

          # Extract the project format version
          FORMAT_VERSION=$(grep -o 'archiveVersion = [0-9]*;' "$PROJECT_FILE/project.pbxproj" | head -n 1 | grep -o '[0-9]*')
          echo "Found project format version: $FORMAT_VERSION"
          
          # Map the format version to Xcode version
          if [ "$FORMAT_VERSION" -ge 77 ]; then
            XCODE_VERSION="15.4"
          elif [ "$FORMAT_VERSION" -ge 75 ]; then
            XCODE_VERSION="15.0"
          elif [ "$FORMAT_VERSION" -ge 70 ]; then
            XCODE_VERSION="14.0"
          else
            XCODE_VERSION="13.0"
          fi
          
          echo "Determined Xcode version: $XCODE_VERSION"
          echo "xcode_version=$XCODE_VERSION" >> $GITHUB_ENV
          echo "project_file=$PROJECT_FILE" >> $GITHUB_ENV

      # Step 3: Set up the determined Xcode version
      - name: Set up Xcode
        run: |
          sudo xcode-select --switch /Applications/Xcode_${{ env.xcode_version }}.app/Contents/Developer
          xcodebuild -version

      # Step 4: Build the app (Unsigned and Without Development Team)
      - name: Build the app
        run: |
          PROJECT_FILE="${{ env.project_file }}"
          ARCHIVE_PATH="${{ github.workspace }}/build/explt.xcarchive"
          DERIVED_DATA_PATH="${{ github.workspace }}/build/DerivedData"
          
          # Clean the project
          xcodebuild -project "$PROJECT_FILE" \
                     -scheme explt \
                     -configuration Release \
                     -sdk iphoneos \
                     -derivedDataPath "$DERIVED_DATA_PATH" \
                     clean
          
          # Build the app (unsigned)
          xcodebuild -project "$PROJECT_FILE" \
                     -scheme explt \
                     -configuration Release \
                     -sdk iphoneos \
                     -derivedDataPath "$DERIVED_DATA_PATH" \
                     -archivePath "$ARCHIVE_PATH" \
                     CODE_SIGN_IDENTITY="" \
                     CODE_SIGNING_REQUIRED=NO \
                     CODE_SIGN_ENTITLEMENTS="" \
                     CODE_SIGNING_ALLOWED=NO \
                     archive
          
          # Export the app without signing
          xcodebuild -exportArchive \
                     -archivePath "$ARCHIVE_PATH" \
                     -exportPath ${{ github.workspace }}/build

      # Step 5: Upload artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: explt-ipa
          path: build/*.ipa
